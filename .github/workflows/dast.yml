name: Reusable workflow for DAST

on:
  workflow_call:
    secrets:
      BOT_TOKEN:
        required: true

jobs:
  dast-scan:
    runs-on: ${{ vars.RUNNER_NAME || 'ubuntu-latest' }}
    steps:
    - name: ZAP API Scan
      if: ${{ vars.APP_TYPE == 'api' }}
      uses: zaproxy/action-api-scan@v0.8.0
      with:
        target: '${{ vars.APP_URL }}'
        format: 'openapi'
        allow_issue_writing: false

    - name: ZAP Full Scan
      if: ${{ vars.APP_TYPE == 'web' }}
      uses: zaproxy/action-full-scan@v0.11.0
      with:
        target: '${{ vars.APP_URL }}'
        allow_issue_writing: false

    - name: Summarize Report
      run: cat report_md.md >> $GITHUB_STEP_SUMMARY

    - name: Archive ZAP Result
      uses: actions/upload-artifact@v4
      with:
        name: zap-result
        path: |
          report_md.md
          report_html.html

  create-issue:
    needs: dast-scan
    runs-on: ${{ vars.RUNNER_NAME || 'ubuntu-latest' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ZAP results
        uses: actions/download-artifact@v4
        with:
          name: zap-result
          path: ./

      - name: Get artifact URL
        id: artifact_info
        run: |
          ARTIFACT_ID=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts \
            --jq '.artifacts[] | select(.name == "zap-result") | .id')
          echo "aid=$ARTIFACT_ID" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Create or update DAST issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact_info.outputs.aid }}"
        run: |
          ISSUE_NUMBER=$(gh issue list --search "DAST ZAP Scan Result" --json number --jq '.[0].number')
          SUMMARY_BODY="## DAST ZAP Scan Summary

          üîç Scan completed for commit \`${GITHUB_SHA:0:7}\` (Run #${GITHUB_RUN_NUMBER})

          ### Quick Links
          - [View full results]($ARTIFACT_URL)
          - [Latest workflow run](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})

          ### Scan Results Overview
          <details>
          <summary>Click to expand detailed results</summary>

          \`\`\`
          $(cat ./report_md.md)
          \`\`\`
          </details>

          ---
          *This issue is automatically updated by the DAST workflow. Please do not edit manually.*
          "
          COMMENT_BODY="**DAST ZAP Scan Results**

          Scan completed for commit \`${GITHUB_SHA:0:7}\` (Run #${GITHUB_RUN_NUMBER}).

          üìä [View full results]($ARTIFACT_URL)

          ---
          *This comment was automatically generated by the DAST workflow.*
          "
          gh label create security --description "Security scan results" --color B22222 --force

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "Creating a new issue..."
            NEW_ISSUE_URL=$(gh issue create \
              --title "DAST ZAP Scan Result" \
              --body "$SUMMARY_BODY" \
              --label "security" \
              --assignee ${{ github.actor }})
            ISSUE_NUMBER=$(echo $NEW_ISSUE_URL | grep -oP '/issues/\K\d+')
            gh issue comment $ISSUE_NUMBER --body "$COMMENT_BODY"
            echo "Created new DAST issue #$ISSUE_NUMBER with initial results" >> $GITHUB_STEP_SUMMARY
          else
            echo "Updating existing DAST issue #$ISSUE_NUMBER"
            gh issue edit $ISSUE_NUMBER \
              --body "$SUMMARY_BODY" \
              --add-assignee ${{ github.actor }} >> $GITHUB_STEP_SUMMARY
            gh issue comment $ISSUE_NUMBER --body "$COMMENT_BODY"
            echo "Updated DAST issue #$ISSUE_NUMBER and added new scan results" >> $GITHUB_STEP_SUMMARY
          fi
